#!/usr/bin/env php
<?php
require 'vendor/autoload.php';
use GuzzleHttp\Client;
use GuzzleHttp\HandlerStack;
use GuzzleHttp\Subscriber\Oauth\Oauth1;

// Create a Guzzle client configured to use Oauth for authentication
$stack = HandlerStack::create();
$client = new Client([
    'base_uri' => 'https://api.aweber.com/1.0/',
    'handler' => $stack,
    'auth' => 'oauth'
]);

// Load credentials into the Oauth client
$credentials = parse_ini_file('credentials.ini');
$requestMiddleware = new Oauth1([
    'consumer_key' => $credentials['consumerKey'],
    'consumer_secret' => $credentials['consumerSecret'],
    'token' => $credentials['accessToken'],
    'token_secret' => $credentials['tokenSecret'],
]);
$stack->push($requestMiddleware);

/**
 * Get all of the entries for a collection
 *
 * @param Client $client HTTP Client used to make a GET request
 * @param string $url Relative path or full url to make the request
 * @return array Every entry in the collection
 */
function getCollection($client, $url) {
    $collection = array();
    while (isset($url)) {
        $body = $client->get($url)->getBody();
        $page = json_decode($body, true);
        $collection = array_merge($page['entries'], $collection);
        $url = isset($page['next_collection_link']) ? $page['next_collection_link'] : null;
    }
    return $collection;
}

// get all the accounts entries
$accounts = getCollection($client, 'accounts');

// get all the list entries for the first account
$lists = getCollection($client, $accounts[0]['lists_collection_link']);

// pick the list to move the subscriber from and to
$originList = $lists[0];
$destinationList = $lists[1];

if (!isset($originList) || !isset($destinationList)) {
    echo "You must have 2 lists to move a subscriber!\n";
    exit();
}

// get all subscribers from the first list
$subscribers = getCollection($client, $originList['subscribers_collection_link']);

// pick the subscriber we want to move
$subscriber = $subscribers[0];

if (!isset($subscriber)) {
    echo "You must have a subscriber on list: {$originList['name']}!\n";
    exit();
}

$data = array(
    'ws.op' => 'move',
    'list_link' => $destinationList['self_link']
);
try {
    // attempt to move the subscriber to the second list
    $moveResponse = $client->post($subscriber['self_link'], ['json' => $data]);
    echo "Moved subscriber {$subscriber['email']} from list: {$originList['name']} to list: {$destinationList['name']}";
} catch (\GuzzleHttp\Exception\RequestException $e) {
    $errorResponse = $e->getResponse();
    $errorContents = json_decode($errorResponse->getBody()->getContents(), true);
    $error = $errorContents['error'];

    // An error will contain the following information:
    //     type, message, documentation_url and status
    // The error type is most often an HTTP reason.
    // The error message gives you the most detail about an error.
    // The documentation_url is a link to the error explanation.
    // The status is the error HTTP status code.
    // For more info see: https://api.aweber.com/#tag/Troubleshooting
    echo "Could not move subscriber!
    ( {$errorResponse->getStatusCode()} {$error['type']} ) {$error['message']}
    Follow this link for more information: {$error['documentation_url']}";
}
